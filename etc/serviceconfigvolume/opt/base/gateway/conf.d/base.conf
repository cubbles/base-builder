server {
    listen 80 default_server;
    server_name  _;

    ### ssl begin
    listen 443 ssl;
    #ssl_certificate ...will be replaced by docker-entrypoint.sh;
    #ssl_certificate_key ...will be replaced by docker-entrypoint.sh;
    ### ssl end

    # To find out, how nginx does request-proccessin: @see http://nginx.org/en/docs/http/request_processing.html

    # purpose: allow accessing webpackages directly
    # - couchdb-api details see http://docs.couchdb.org/en/1.6.1/http-api.html
    location / {
        # cors related config
        add_header Access-Control-Allow-Headers "X-Requested-With";
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Origin "*";

        # authentication
        limit_except GET HEAD {
            deny  all;
        }
        # proxy target
        proxy_pass http://coredatastore:5984/webpackage-store/;

        # base64 encoded credentials (used https://www.base64encode.org/)
        proxy_set_header Authorization "Basic YWRtaW46YWRtaW4=";
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }


    # purpose: allow upload webpackages directly
    # - couchdb-api details see http://docs.couchdb.org/en/1.6.1/http-api.html
    location /_upload {
        # CORS related config
        add_header Access-Control-Allow-Headers "X-Requested-With";
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
        add_header Access-Control-Allow-Origin "*";

        # authentication
        auth_basic "Restricted";
        auth_basic_user_file /opt/base/gateway/conf.d/_upload-htpasswd;

        # proxy target
        proxy_pass http://coredatastore:5984/webpackage-store/;

        # base64 encoded credentials (used https://www.base64encode.org/)
        proxy_set_header Authorization "Basic YWRtaW46YWRtaW4=";
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }


    # purpose: allow replication of the database
    # - couchdb-api details see http://docs.couchdb.org/en/1.6.1/http-api.html
    location /_replicate {
        # couchdb-api details see http://docs.couchdb.org/en/1.6.1/http-api.html

        # authentication
        auth_basic "Restricted";
        auth_basic_user_file /opt/base/gateway/conf.d/_replicate-htpasswd;

        # proxy target
        rewrite ^/_replicate/?$ /webpackage-store break;
        rewrite ^/_replicate/_changes$ /webpackage-store/_changes break;
        rewrite ^/_replicate/_ensure_full_commit$ /webpackage-store/_ensure_full_commit break;
        rewrite ^/_replicate(/.*)$ /webpackage-store$1 break;
        proxy_pass http://coredatastore:5984;

        # base64 encoded credentials (used https://www.base64encode.org/)
        proxy_set_header Authorization "Basic YWRtaW46YWRtaW4=";
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # purpose: allow accessing webpackages directly
    # - couchdb-api details see http://docs.couchdb.org/en/1.6.1/http-api.html
    location /_api/webpackagesearch {
        # CORS
        #  note: LoopBack enables Cross-origin resource sharing (CORS).
        #  @see http://docs.strongloop.com/display/public/LB/Security+considerations#Securityconsiderations-CORS
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # limit access
        limit_except GET HEAD {
            deny  all;
        }
        # proxy target
        proxy_pass http://webpackagesearch:3000;


    }
}